(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("Wormhole", [], factory);
	else if(typeof exports === 'object')
		exports["Wormhole"] = factory();
	else
		root["Wormhole"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack://Wormhole/./node_modules/events/events.js?");

/***/ }),

/***/ "./src/Request.ts":
/*!************************!*\
  !*** ./src/Request.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(/*! ./util */ \"./src/util.ts\");\nvar util_2 = __webpack_require__(/*! ./util */ \"./src/util.ts\");\nvar WORMHOLE_TYPE_CALL = \"call\";\nvar WORMHOLE_TYPE_RESULT = \"result\";\nvar ERRORS;\n(function (ERRORS) {\n    ERRORS[ERRORS[\"ERROR_PARSING_MESSAGE\"] = 1] = \"ERROR_PARSING_MESSAGE\";\n    ERRORS[ERRORS[\"ERROR_CONNECTION\"] = 2] = \"ERROR_CONNECTION\";\n    ERRORS[ERRORS[\"ERROR_CALL\"] = 3] = \"ERROR_CALL\";\n    ERRORS[ERRORS[\"ERROR_PARSING_RESPONSE\"] = 4] = \"ERROR_PARSING_RESPONSE\";\n})(ERRORS || (ERRORS = {}));\nvar WormholeRequest = /** @class */ (function () {\n    function WormholeRequest(path, request, metadata, connection) {\n        if (request === void 0) { request = []; }\n        if (metadata === void 0) { metadata = {}; }\n        this.callbacks = new Map();\n        this.id = util_1.uuid();\n        // tslint:disable-next-line:variable-name\n        this._onConnectionMessage = this.onConnectionMessage.bind(this);\n        // tslint:disable-next-line:variable-name\n        this._onConnectionError = this.onConnectionError.bind(this);\n        this.createPromise();\n        this.path = path;\n        this.request = this.transformRequest(request);\n        this.metadata = null; // metadata;\n        this.connection = connection;\n        this.connection.on(\"message\", this._onConnectionMessage);\n        this.connection.on(\"error\", this._onConnectionError);\n        this.send();\n    }\n    WormholeRequest.createError = function (type, data) {\n        var error = new Error(String(data) || ERRORS[type]);\n        error.name = ERRORS[type];\n        return error;\n    };\n    WormholeRequest.prototype.then = function (onFulfilled, onRejected) {\n        return this.promise.then(onFulfilled, onRejected);\n    };\n    WormholeRequest.prototype.catch = function (onRejected) {\n        return this.promise.catch(onRejected);\n    };\n    WormholeRequest.prototype.finally = function (onFinally) {\n        return this.promise.finally(onFinally);\n    };\n    WormholeRequest.prototype.send = function () {\n        this.sendMessage(WORMHOLE_TYPE_CALL, { ID: this.id, Ref: this.path, Meta: this.metadata, Vars: this.request });\n    };\n    WormholeRequest.prototype.sendMessage = function (type, payload) {\n        var message = { Payload: payload, Type: type };\n        this.connection.send(JSON.stringify(message));\n    };\n    WormholeRequest.prototype.onConnectionMessage = function (event) {\n        try {\n            var data = JSON.parse(event.data);\n            this.receiveMessage(data);\n        }\n        catch (e) {\n            this.reject(WormholeRequest.createError(ERRORS.ERROR_PARSING_MESSAGE));\n            this.onDone();\n        }\n    };\n    WormholeRequest.prototype.receiveMessage = function (message) {\n        if (message.Type === WORMHOLE_TYPE_CALL) {\n            this.callCallback(message.Payload);\n        }\n        else if (message.Type === WORMHOLE_TYPE_RESULT) {\n            this.onResult(message.Payload);\n        }\n    };\n    WormholeRequest.prototype.onResult = function (data) {\n        var error = data.Result.Error;\n        var Vals = data.Result.Vals;\n        try {\n            if (error) {\n                this.reject(WormholeRequest.createError(ERRORS.ERROR_CALL, error));\n            }\n            else {\n                this.resolve(util_2.transformResponse(Vals));\n            }\n        }\n        catch (e) {\n            this.reject(WormholeRequest.createError(ERRORS.ERROR_PARSING_RESPONSE));\n        }\n    };\n    WormholeRequest.prototype.onConnectionError = function () {\n        this.reject(WormholeRequest.createError(ERRORS.ERROR_CONNECTION));\n        this.onDone();\n    };\n    WormholeRequest.prototype.callCallback = function (data) {\n        var _this = this;\n        var callback = this.callbacks.get(data.Ref);\n        if (!callback) {\n            return;\n        }\n        var args = data.Vars.reduce(function (res, part) { return res.concat(part.slice(1)); }, []);\n        var payload = {\n            Call: data.ID,\n            Meta: null,\n            Result: { Vals: [], Error: \"\" },\n        };\n        // @ts-ignore\n        Promise.resolve(callback.apply(void 0, args))\n            .then(function (result) { return _this.transformRequest(result); })\n            .then(function (result) {\n            payload.Result.Vals = result;\n        })\n            .catch(function (error) {\n            payload.Result.Error = String(error);\n        })\n            .finally(function () {\n            _this.sendMessage(WORMHOLE_TYPE_RESULT, payload);\n        });\n    };\n    WormholeRequest.prototype.transformRequest = function (request) {\n        var _a = util_2.transformRequest(request), payload = _a.payload, callbacks = _a.callbacks;\n        for (var key in callbacks) {\n            if (callbacks.hasOwnProperty(key)) {\n                this.callbacks.set(key, callbacks[key]);\n            }\n        }\n        return payload;\n    };\n    WormholeRequest.prototype.onDone = function () {\n        this.connection.off(\"message\", this._onConnectionMessage);\n        this.connection.off(\"error\", this._onConnectionError);\n    };\n    WormholeRequest.prototype.createPromise = function () {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    };\n    return WormholeRequest;\n}());\nexports.default = WormholeRequest;\n\n\n//# sourceURL=webpack://Wormhole/./src/Request.ts?");

/***/ }),

/***/ "./src/WebsocketConnection.ts":
/*!************************************!*\
  !*** ./src/WebsocketConnection.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar defaultOptions = {\n    maxReconnects: Infinity,\n    reconnect: true,\n    reconnectTimeout: 10,\n};\nvar WebsocketConnection = /** @class */ (function (_super) {\n    __extends(WebsocketConnection, _super);\n    function WebsocketConnection(connectionUrl, options) {\n        var _this = _super.call(this) || this;\n        _this.socket = null;\n        _this.queue = [];\n        _this.reconnects = 0;\n        _this.freeze = false;\n        _this.options = Object.assign({}, defaultOptions, options);\n        _this.connectionUrl = connectionUrl;\n        return _this;\n    }\n    WebsocketConnection.prototype.connect = function () {\n        this.freeze = false;\n        this.reconnects = 0;\n        this.queue = [];\n        this.tryConnect();\n        return this;\n    };\n    WebsocketConnection.prototype.tryConnect = function () {\n        var _this = this;\n        try {\n            var socket_1 = new WebSocket(this.connectionUrl);\n            socket_1.onopen = function () { return _this.onOpen(socket_1); };\n            socket_1.onclose = function (e) { return _this.onClose(e); };\n            socket_1.onerror = function () { return _this.onError(); };\n            socket_1.onmessage = function (e) { return _this.onMessage(e); };\n        }\n        catch (e) {\n            this.emit(\"error\", e);\n        }\n        return this;\n    };\n    WebsocketConnection.prototype.disconnect = function () {\n        if (this.socket) {\n            this.socket.close();\n        }\n    };\n    WebsocketConnection.prototype.send = function (message) {\n        this.queue.push(message);\n        this.drain();\n    };\n    WebsocketConnection.prototype.reconnect = function () {\n        var _this = this;\n        var canReconnect = this.socket === null;\n        if (canReconnect) {\n            clearTimeout(this.reconnection);\n            this.reconnection = setTimeout(function () {\n                _this.reconnects++;\n                _this.reconnection = null;\n                _this.tryConnect();\n            }, this.options.reconnectTimeout);\n        }\n    };\n    WebsocketConnection.prototype.drain = function () {\n        var _this = this;\n        if (this.socket) {\n            this.queue.forEach(function (msg) { return _this.socket.send(msg); });\n            this.queue = [];\n        }\n    };\n    WebsocketConnection.prototype.onOpen = function (socket) {\n        this.reconnects = 0;\n        this.socket = socket;\n        this.drain();\n        this.emit(\"connect\");\n    };\n    WebsocketConnection.prototype.onClose = function (event) {\n        this.socket = null;\n        this.emit(\"disconnect\", event);\n        if (!event.wasClean) {\n            this.tryReconnect();\n        }\n    };\n    WebsocketConnection.prototype.onError = function () {\n        this.socket = null;\n        this.tryReconnect();\n    };\n    WebsocketConnection.prototype.onMessage = function (event) {\n        this.emit(\"message\", event);\n    };\n    WebsocketConnection.prototype.tryReconnect = function () {\n        if (this.reconnects < this.options.maxReconnects) {\n            this.reconnect();\n        }\n        else if (this.reconnects === this.options.maxReconnects && !this.freeze) {\n            this.freeze = true;\n            this.emit(\"error\", new Error(\"UsedAttemptsReconnect\"));\n        }\n    };\n    return WebsocketConnection;\n}(events_1.EventEmitter));\nexports.default = WebsocketConnection;\n\n\n//# sourceURL=webpack://Wormhole/./src/WebsocketConnection.ts?");

/***/ }),

/***/ "./src/WormholeClient.ts":
/*!*******************************!*\
  !*** ./src/WormholeClient.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar Request_1 = __webpack_require__(/*! ./Request */ \"./src/Request.ts\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./src/util.ts\");\nvar WebsocketConnection_1 = __webpack_require__(/*! ./WebsocketConnection */ \"./src/WebsocketConnection.ts\");\nvar WORMHOLE_TYPE_CALL = \"call\";\nvar WORMHOLE_TYPE_RESULT = \"result\";\nvar WormholeClient = /** @class */ (function (_super) {\n    __extends(WormholeClient, _super);\n    function WormholeClient(connectionUrl, options) {\n        var _this = _super.call(this) || this;\n        _this.options = {};\n        _this.provides = {};\n        // tslint:disable-next-line:variable-name\n        _this._onConnectionMessage = _this.onConnectionMessage.bind(_this);\n        if (!connectionUrl) {\n            throw new Error(\"connectionUrl required\");\n        }\n        _this.options = options;\n        _this.connection = new WebsocketConnection_1.default(connectionUrl, _this.options.connectionOptions);\n        _this.connection.on(\"message\", _this._onConnectionMessage);\n        return _this;\n    }\n    WormholeClient.prototype.connect = function () {\n        return this.connection.connect();\n    };\n    WormholeClient.prototype.getConnection = function () {\n        return this.connection;\n    };\n    WormholeClient.prototype.disconnect = function () {\n        this.connection.disconnect();\n        return this;\n    };\n    Object.defineProperty(WormholeClient.prototype, \"remote\", {\n        get: function () {\n            return this.getRemoteProxy();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WormholeClient.prototype.provide = function (module, methods) {\n        Object.assign(this.provides, mapProvide(module, methods));\n        return this;\n    };\n    WormholeClient.prototype.getRemoteProxy = function () {\n        var self = this;\n        var path = [];\n        function call(request, metadata) {\n            return self.createRequest(path.join(\".\"), request, metadata);\n        }\n        var handler = {\n            get: function (_, part) {\n                if (!part.startsWith(\"Symbol\")) {\n                    path.push(part);\n                }\n                return proxy;\n            },\n        };\n        var proxy = new Proxy(call, handler);\n        return proxy;\n    };\n    WormholeClient.prototype.createRequest = function (path, request, metadata) {\n        return new Request_1.default(path, request, metadata, this.connection);\n    };\n    WormholeClient.prototype.onConnectionMessage = function (event) {\n        try {\n            var data = JSON.parse(event.data);\n            if (data.Type === WORMHOLE_TYPE_CALL) {\n                this.callProvideMethod(data.Payload);\n            }\n        }\n        catch (e) {\n            // Do nothing\n        }\n    };\n    WormholeClient.prototype.callProvideMethod = function (data) {\n        var _a;\n        var _this = this;\n        var key = data.Ref;\n        if (!this.provides[key]) {\n            return;\n        }\n        var args = util_1.transformResponse(data.Vars);\n        var payload = {\n            Call: data.ID,\n            Meta: null,\n            Result: { Vals: [], Error: \"\" },\n        };\n        // @ts-ignore\n        Promise.resolve((_a = this.provides)[key].apply(_a, args))\n            .then(function (result) { return util_1.transformRequest(result); })\n            .then(function (result) {\n            // @ts-ignore\n            payload.Result.Vals = result.payload;\n        })\n            .catch(function (error) {\n            payload.Result.Error = String(error);\n        })\n            .finally(function () {\n            _this.sendMessage(WORMHOLE_TYPE_RESULT, payload);\n        });\n    };\n    WormholeClient.prototype.sendMessage = function (type, payload) {\n        var message = { Payload: payload, Type: type };\n        this.connection.send(JSON.stringify(message));\n    };\n    return WormholeClient;\n}(events_1.EventEmitter));\nexports.default = WormholeClient;\nvar mapProvide = function (module, methods) {\n    var result = {};\n    for (var method in methods) {\n        if (methods.hasOwnProperty(method)) {\n            result[module + \".\" + method] = methods[method];\n        }\n    }\n    return result;\n};\n\n\n//# sourceURL=webpack://Wormhole/./src/WormholeClient.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./WormholeClient */ \"./src/WormholeClient.ts\"));\n\n\n//# sourceURL=webpack://Wormhole/./src/index.ts?");

/***/ }),

/***/ "./src/util.ts":
/*!*********************!*\
  !*** ./src/util.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uuid = function () {\n    var mask = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\n    // tslint:disable-next-line:no-bitwise\n    return mask.replace(/[xy]/g, function (c, r) { return (\"x\" === c ? (r = Math.random() * 16 | 0) : (r & 0x3 | 0x8)).toString(16); });\n};\nexports.transformResponse = function (response) {\n    var result = {};\n    response.forEach(function (_a) {\n        var key = _a[0], value = _a[1];\n        result[key] = value;\n    });\n    return result;\n};\nexports.transformRequest = function (request) {\n    var result = { callbacks: {}, payload: [] };\n    if (typeof request === \"string\") {\n        result.payload.push([\"\", request]);\n        return result;\n    }\n    for (var prop in request) {\n        if (request.hasOwnProperty(prop)) {\n            var value = request[prop];\n            if (typeof value === \"function\") {\n                var id = exports.uuid();\n                result.callbacks[id] = value;\n                result.payload.push([prop, id]);\n            }\n            else {\n                result.payload.push([prop, value]);\n            }\n        }\n    }\n    return result;\n};\n\n\n//# sourceURL=webpack://Wormhole/./src/util.ts?");

/***/ })

/******/ })["default"];
});